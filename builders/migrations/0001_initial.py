# Generated by Django 3.2.4 on 2021-06-26 12:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("bikes", "0004_auto_20210624_0031"),
    ]

    operations = [
        migrations.CreateModel(
            name="Kid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone_number", models.CharField(blank=True, max_length=50)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("accepts_text_messages", models.BooleanField(default=True)),
                (
                    "reward_bike",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="kid_earning_bike",
                        to="bikes.bike",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kid",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Guardian",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("phone_number", models.CharField(blank=True, max_length=50)),
                ("accepts_text_messages", models.BooleanField(default=True)),
                ("waiver_signed", models.BooleanField(default=False)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("address_line_1", models.CharField(blank=True, max_length=50)),
                ("address_line_2", models.CharField(blank=True, max_length=50)),
                ("city", models.CharField(blank=True, max_length=20)),
                ("state", models.CharField(blank=True, max_length=2)),
                ("zip_code", models.CharField(blank=True, max_length=10)),
                (
                    "kids",
                    models.ManyToManyField(related_name="guardians", to="builders.Kid"),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="kid",
            constraint=models.CheckConstraint(
                check=models.Q(("email", ""), ("phone_number", ""), _negated=True),
                name="kid_one_of_email_or_phone",
            ),
        ),
        migrations.AddConstraint(
            model_name="guardian",
            constraint=models.CheckConstraint(
                check=models.Q(("email", ""), ("phone_number", ""), _negated=True),
                name="guardian_email_or_phone",
            ),
        ),
        migrations.AddConstraint(
            model_name="guardian",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("address_line_1", ""),
                        ("address_line_2", ""),
                        ("city", ""),
                        ("state", ""),
                        ("zip_code", ""),
                    ),
                    models.Q(
                        models.Q(("address_line_1", ""), _negated=True),
                        models.Q(("city", ""), _negated=True),
                        models.Q(("state", ""), _negated=True),
                        models.Q(("zip_code", ""), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="all_mail_fields_blank_or_none",
            ),
        ),
    ]
